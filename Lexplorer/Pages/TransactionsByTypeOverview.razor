@using Lexplorer.Helpers;
@using Lexplorer.Models;
@using Lexplorer.Components;
@inject Lexplorer.Services.LoopringGraphQLService GraphQLService;
@inject NavigationManager NavigationManager;
@page "/transactions/{transactionType}";

<PageTitle>The Lexplorer - @transactionType</PageTitle>

@if (transactionData != null)
{
    <TransactionTable transactions=@transactionData isLoading=@isLoading pageNumber=@pageNumber transactionType="@transactionType"></TransactionTable>
    @if (pageNumber == "0")
    {
                                <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="GoToNextPage">Next Page</MudButton>
    }
    else
    {
                                <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="GoToStartPage">Back to Start</MudButton>
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="GoToPreviousPage">Previous Page</MudButton>
                                <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="GoToNextPage">Next Page</MudButton>
    }
}
else
{
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}

@code {
    private Transactions? transactionData;

    [Parameter]
    public string? transactionType { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string pageNumber { get; set; } = "0";
    public bool isLoading;

    protected override async Task OnParametersSetAsync()
    {
        if (String.IsNullOrEmpty(pageNumber))
        {
            pageNumber = "0";
        }
        isLoading = true;
        transactionData = await GraphQLService.GetTransactions(Int32.Parse(pageNumber) * 25, 25, typeName: transactionType);
        isLoading = false;
        StateHasChanged();
    }

    private void GoToNextPage()
    {
        int nextPage = Int32.Parse(pageNumber) + 1;
        string parameters = $"transactions/{transactionType}?pageNumber={nextPage.ToString()}";
        NavigationManager.NavigateTo(parameters);
    }

    private void GoToPreviousPage()
    {
        int previousPage = Int32.Parse(pageNumber) - 1;
        string parameters = $"transactions/{transactionType}?pageNumber={previousPage.ToString()}";
        NavigationManager.NavigateTo(parameters);
    }
    private void GoToStartPage()
    {
        string parameters = $"transactions/{transactionType}?pageNumber=0";
        NavigationManager.NavigateTo(parameters);
    }
}
