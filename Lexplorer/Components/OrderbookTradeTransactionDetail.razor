@using Lexplorer.Models;
@using Lexplorer.Helpers;
@inject NavigationManager NavigationManager;

<PageTitle>The Lexplorer - Trade Details</PageTitle>

@if (TradeDetails != null)
{
                          <MudText Typo="Typo.h6">Transaction #@TradeDetails.id</MudText>
                        <MudSimpleTable Dense="true">
                            <tbody>
                                <tr>
                                    <td>Block #</td>
                                    <td>@TradeDetails.block!.id</td>
                                </tr>
                                <tr>
                                    <td>Verified At (UTC)</td>
                                    <td>@TimestampToUTCConverter.Convert(TradeDetails.block!.timestamp!)</td>
                                </tr>
                                <tr>
                                    <td>Transaction Type</td>
                                    <td>@TradeDetails.typeName</td>
                                </tr>
                                <tr>
                                    <td>Account 1</td>
                                    <td>@AccountLinkHelper.CreateUserLink(TradeDetails.accountA!, false)</td>
                                </tr>
                                <tr>
                                    <td>Account 2</td>
                                    <td>@AccountLinkHelper.CreateUserLink(TradeDetails.accountB!, false)</td>
                                </tr>
                                <tr>
                                    <td>Trade</td>
                                    <td>@TokenAmountConverter.ToString(TradeDetails.fillSA, TradeDetails.tokenA!.decimals) @TradeDetails.tokenA.symbol @swapSymbol @TokenAmountConverter.ToString(TradeDetails.fillSB, TradeDetails.tokenB!.decimals) @TradeDetails.tokenB.symbol</td>
                                </tr>
                                <tr>
                                    <td>Fee</td>
                                        @if (TradeDetails.feeA > 0)
                                        {
                                            <td>@TokenAmountConverter.ToString(TradeDetails.feeA,  TradeDetails.tokenB.decimals) @TradeDetails.tokenB.symbol</td>
                                        }
                                        else if (TradeDetails.feeB > 0)
                                        {
                                         <td>@TokenAmountConverter.ToString(TradeDetails.feeB,  TradeDetails.tokenA.decimals) @TradeDetails.tokenA.symbol</td>
                                        }
                                    </tr>
                                <tr>
                                    <td>Transaction Data</td>
                                    <td><MudTextField T="string" Variant="Variant.Filled"  ReadOnly="true" Text="@TradeDetails.data" Lines="3"/></td>
                                </tr>
                            </tbody>
            </MudSimpleTable>
            <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="GoToBlockOverviewPage">Back to originating block</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="GoToOrderbookTradeOverviewPage">Back to recent Orderbook Trades</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="GoToTransactionOverviewPage">Back to recent Transactions</MudButton>
}

@code {
    [Parameter]
    public OrderBookTrade? TradeDetails { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string previousPageNumber { get; set; } = "";

    public string swapSymbol = "<>";

    [Parameter]
    [SupplyParameterFromQuery]
    public string originatingPage { get; set; } = "";

    private void GoToBlockOverviewPage()
    {
        string tempPreviousPageNumber = "";
        string tempOriginatingPage = "";
        NavigationManager.TryGetQueryString<string>("previousPageNumber", out tempPreviousPageNumber);
        NavigationManager.TryGetQueryString<string>("originatingPage", out tempOriginatingPage);
        string parameters = "";
        if (tempOriginatingPage == "blockDetails")
        {
            parameters = $"blocks/{TradeDetails!.block!.id}?pageNumber={tempPreviousPageNumber}";
        }
        else
        {
            parameters = $"blocks/{TradeDetails!.block!.id}?pageNumber=0";
        }
        NavigationManager.NavigateTo(parameters);
    }
    
    private void GoToOrderbookTradeOverviewPage()
    {
        string parameters = $"transactions/OrderbookTrade?pageNumber=0";
        NavigationManager.NavigateTo(parameters);
    }

    private void GoToTransactionOverviewPage()
    {
        string parameters = $"transactions?pageNumber=0";
        NavigationManager.NavigateTo(parameters);
    }
}
