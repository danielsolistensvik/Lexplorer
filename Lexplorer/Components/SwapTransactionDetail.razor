@using Lexplorer.Models;
@using Lexplorer.Helpers;
@inject NavigationManager NavigationManager;

<PageTitle>The Lexplorer - Swap Details</PageTitle>

@if (SwapDetails != null)
{
                      <MudText Typo="Typo.h6">Transaction #@SwapDetails.id</MudText>
                    <MudSimpleTable Dense="true">
                        <tbody>
                            <tr>
                                <td>Block #</td>
                                <td>@SwapDetails.block!.id</td>
                            </tr>
                            <tr>
                                <td>Verified At (UTC)</td>
                                <td>@TimestampToUTCConverter.Convert(SwapDetails.block!.timestamp!)</td>
                            </tr>
                            <tr>
                                <td>Transaction Type</td>
                                <td>Swap</td>
                            </tr>
                            <tr>
                                <td>User Account</td>
                                <td>@AccountLinkHelper.CreateUserLink(SwapDetails.account!, false)</td>
                            </tr>
                            <tr>
                                <td>Swap</td>
                                <td>@TokenAmountConverter.Convert(SwapDetails.fillSA, SwapDetails.tokenA!.decimals) @SwapDetails.tokenA.symbol @swapSymbol @TokenAmountConverter.Convert(SwapDetails.fillSB, SwapDetails.tokenB!.decimals) @SwapDetails.tokenB.symbol</td>
                            </tr>
                            <tr>
                                <td>Fee</td>
                                <td>@TokenAmountConverter.Convert(SwapDetails.feeA,  SwapDetails.tokenB!.decimals) @SwapDetails.tokenB.symbol</td>
                            </tr>
                            <tr>
                                <td>Pool</td>
                                <td>@AccountLinkHelper.CreateUserLink(SwapDetails.pool!, false)</td>
                            </tr>
                            <tr>
                                <td>Raw Data</td>
                                <td><MudTextField T="string" Variant="Variant.Filled"  ReadOnly="true" Text="@SwapDetails.data" Lines="3"/></td>
                            </tr>
                        </tbody>
        </MudSimpleTable>
        <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="GoToBlockOverviewPage">Back to originating block</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="GoToSwapOverviewPage">Back to recent Swaps</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="GoToTransactionOverviewPage">Back to recent Transactions</MudButton>
}

@code {
    [Parameter]
    public Swap? SwapDetails { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string previousPageNumber { get; set; } = "0";

    public string swapSymbol = "<>";

    [Parameter]
    [SupplyParameterFromQuery]
    public string? originatingPage { get; set; }

    private void GoToBlockOverviewPage()
    {
        string tempPreviousPageNumber = "";
        string tempOriginatingPage = "";
        NavigationManager.TryGetQueryString<string>("previousPageNumber", out tempPreviousPageNumber);
        NavigationManager.TryGetQueryString<string>("originatingPage", out tempOriginatingPage);
        string parameters = "";
        if (tempOriginatingPage == "blockDetails")
        {
            parameters = $"blocks/{SwapDetails!.block!.id}?pageNumber={tempPreviousPageNumber}";
        }
        else
        {
            parameters = $"blocks/{SwapDetails!.block!.id}?pageNumber=0";
        }
        NavigationManager.NavigateTo(parameters);
    }

    private void GoToSwapOverviewPage()
    {
        string parameters = $"transactions/Swap?pageNumber=0";
        NavigationManager.NavigateTo(parameters);
    }
        private void GoToTransactionOverviewPage()
    {
        string parameters = $"transactions?pageNumber=0";
        NavigationManager.NavigateTo(parameters);
    }
}
